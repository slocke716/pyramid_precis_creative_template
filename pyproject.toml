[tool]
[tool.poetry]
name = "pyramid_precis_creative_template"
version = "0.2.0"
description = "Default template for pyramid_resume"
authors = ["Marc LaBelle <mjlabe@gmail.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "pyramid_precis_creative_template" },
]

[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
default = false
secondary = false

[tool.poetry.dependencies]
# ^ notation: "^3.9" == ">=3.9, <4.0"
# ~ notation: "~3.9" == ">=3.9, <3.10"
python = "^3.9"

[tool.poetry.dev-dependencies]
bandit = "^1.7.4"
black = "^22.6.0"
bumpversion = "^0.6.0"
coverage = "^6.4.3"
flake8 = "^5.0.4"
flake8-bugbear = "^22.7.1.0"
invoke = "1.7.1"
isort = "^5.10.1"
pydantic = "1.8.2"
pydantic-yaml = "0.8.1"
pyramid = "2.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-xdist = "^2.0.0"
safety = "^2.3.1"
sphinx = "^5.1.1"
tox = "^3.25.1"
types-requests = "^2.28.8"

[tool.poetry.scripts]
pyramid_precis_creative_template = "pyramid_precis_creative_template.cli:main"

[tool.pytest.ini_options]
minversion = "6.0"
filterwarnings = "ignore::DeprecationWarning"
addopts = [
    "-v",
    "-n=auto",
]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:"]
skip_empty = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py3.9, py3.10, docs


[testenv:docs]
basepython=python
commands= poetry run invoke docs --no-launch

[testenv]
description = Run compliance tests
whitelist_externals = poetry
setenv =
    PIP_EXTRA_INDEX_URL = https://artifactory.aws.gel.ac/artifactory/api/pypi/pypi/simple
require_locked_deps = true
install_dev_deps = true
commands =
    poetry run invoke format --check
    poetry run invoke lint
    poetry run invoke security-bandit
    poetry run invoke test --junit --coverage="xml"
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
